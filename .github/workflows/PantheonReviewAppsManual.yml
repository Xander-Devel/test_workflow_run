name: "Pantheon Review Apps Manual"

on:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  Drainpipe-Deploy-Pantheon-Multidev:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/.ddev/.drainpipe-composer-cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Set env Custom
        run: |
          echo "Setting Drainpipe environment variables:"
          DRAINPIPE_PR_NUMBER=$(gh pr list --state open --head "$BRANCH" --json number --jq '.[0].number')
          echo "DRAINPIPE_PR_NUMBER=$DRAINPIPE_PR_NUMBER" >> $GITHUB_ENV
          DRAINPIPE_SHA=$(gh pr view "$DRAINPIPE_PR_NUMBER" --json headRefOid --jq '.headRefOid')
          echo "DRAINPIPE_SHA=$DRAINPIPE_SHA" >> $GITHUB_ENV

          if [ -z "$DRAINPIPE_SHA" ] || [ "$DRAINPIPE_SHA" = "null" ]; then
            DRAINPIPE_SHA=$DRAINPIPE_PR_NUMBER
            echo "DRAINPIPE_SHA=$DRAINPIPE_PR_NUMBER" >> $GITHUB_ENV
          fi

          #test
          echo "Testststststtstssssssssssssststststststst"
          echo "DRAINPIPE_PR_NUMBER: $DRAINPIPE_PR_NUMBER"
          echo "DRAINPIPE_SHA: $DRAINPIPE_SHA"
          echo "GITHUB_EVENT_PATH: $GITHUB_EVENT_PATH"
        env:
          GH_TOKEN: ${{ github.token }}
          BRANCH2: ${{ github.ref }}
          BRANCH: ${{ github.ref_name }}

      - name: Set custom GITHUB_REF
        id: set_custom_ref
        run: |
          echo "custom_ref=refs/pull/${{ steps.find_pr.outputs.pr_number }}/merge" >> $GITHUB_OUTPUT
          echo "GITHUB_REF=refs/pull/${{ steps.find_pr.outputs.pr_number }}/merge" >> $GITHUB_ENV

      - uses: ./.github/actions/drainpipe/set-env
        env:
          GITHUB_REF: ${{ steps.set_custom_ref.outputs.custom_ref }}

      - name: Deploy Pantheon Review App
        uses: ./.github/actions/drainpipe/pantheon/review
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          terminus-token: ${{ secrets.PANTHEON_TERMINUS_TOKEN }}
          commit-message: ${{ github.sha }}
          site-name: ${{ vars.PANTHEON_SITE_NAME || secrets.PANTHEON_SITE_NAME }}
          lock-username: ${{ secrets.PANTHEON_REVIEW_USERNAME }}
          lock-password: ${{ secrets.PANTHEON_REVIEW_PASSWORD }}
          # set to "true" if you want to run the installer
          run-installer: ${{ secrets.PANTHEON_REVIEW_RUN_INSTALLER }}
